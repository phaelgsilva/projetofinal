{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore, collection, doc, getDoc, getDocs } from 'firebase/firestore';\nexport var cadastrarUsuario = function () {\n  var _ref = _asyncToGenerator(function* (email, senha, nome) {\n    try {\n      var userCredential = yield createUserWithEmailAndPassword(auth, email, senha);\n      yield setDoc(doc(db, 'users', userCredential.user.uid), {\n        nome: nome,\n        email: email,\n        createdAt: new Date()\n      });\n      return userCredential.user;\n    } catch (error) {\n      console.error('Error creating user:', error);\n      throw error;\n    }\n  });\n  return function cadastrarUsuario(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar firebaseConfig = {\n  apiKey: \"your-api-key\",\n  authDomain: \"your-auth-domain\",\n  projectId: \"your-project-id\",\n  storageBucket: \"your-storage-bucket\",\n  messagingSenderId: \"your-messaging-sender-id\",\n  appId: \"your-app-id\"\n};\nvar app = initializeApp(firebaseConfig);\nexport var auth = getAuth(app);\nexport var db = getFirestore(app);\nexport var getQuadras = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    var quadrasRef = collection(db, 'quadras');\n    var snapshot = yield getDocs(quadrasRef);\n    return snapshot.docs.map(function (doc) {\n      return _objectSpread({\n        id: doc.id\n      }, doc.data());\n    });\n  });\n  return function getQuadras() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getCourtDetails = function () {\n  var _ref3 = _asyncToGenerator(function* (courtId) {\n    var docRef = doc(db, 'quadras', courtId);\n    var docSnap = yield getDoc(docRef);\n    if (docSnap.exists()) {\n      return _objectSpread({\n        id: docSnap.id\n      }, docSnap.data());\n    }\n    throw new Error('Quadra não encontrada');\n  });\n  return function getCourtDetails(_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getHistoricoReservas = function () {\n  var _ref4 = _asyncToGenerator(function* () {\n    var reservasRef = collection(db, 'reservas');\n    var snapshot = yield getDocs(reservasRef);\n    return snapshot.docs.map(function (doc) {\n      return _objectSpread({\n        id: doc.id\n      }, doc.data());\n    });\n  });\n  return function getHistoricoReservas() {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["initializeApp","getAuth","getFirestore","collection","doc","getDoc","getDocs","cadastrarUsuario","_ref","_asyncToGenerator","email","senha","nome","userCredential","createUserWithEmailAndPassword","auth","setDoc","db","user","uid","createdAt","Date","error","console","_x","_x2","_x3","apply","arguments","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","getQuadras","_ref2","quadrasRef","snapshot","docs","map","_objectSpread","id","data","getCourtDetails","_ref3","courtId","docRef","docSnap","exists","Error","_x4","getHistoricoReservas","_ref4","reservasRef"],"sources":["C:/Users/yphae/Desktop/teste/quadras-app/src/services/firebase.ts"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore, collection, doc, getDoc, getDocs } from 'firebase/firestore';\n\nexport const cadastrarUsuario = async (email: string, senha: string, nome: string) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, senha);\n    await setDoc(doc(db, 'users', userCredential.user.uid), {\n      nome,\n      email,\n      createdAt: new Date()\n    });\n    return userCredential.user;\n  } catch (error) {\n    console.error('Error creating user:', error);\n    throw error;\n  }\n};\n\n\nconst firebaseConfig = {\n  apiKey: \"your-api-key\",\n  authDomain: \"your-auth-domain\",\n  projectId: \"your-project-id\",\n  storageBucket: \"your-storage-bucket\",\n  messagingSenderId: \"your-messaging-sender-id\",\n  appId: \"your-app-id\"\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n\nexport const getQuadras = async () => {\n  const quadrasRef = collection(db, 'quadras');\n  const snapshot = await getDocs(quadrasRef);\n  return snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n};\n\nexport const getCourtDetails = async (courtId: string) => {\n  const docRef = doc(db, 'quadras', courtId);\n  const docSnap = await getDoc(docRef);\n  if (docSnap.exists()) {\n    return { id: docSnap.id, ...docSnap.data() };\n  }\n  throw new Error('Quadra não encontrada');\n};\n\nexport const getHistoricoReservas = async () => {\n  const reservasRef = collection(db, 'reservas');\n  const snapshot = await getDocs(reservasRef);\n  return snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n};"],"mappings":";;;;AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,YAAY,EAAEC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,OAAO,QAAQ,oBAAoB;AAEnF,OAAO,IAAMC,gBAAgB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAa,EAAEC,KAAa,EAAEC,IAAY,EAAK;IACpF,IAAI;MACF,IAAMC,cAAc,SAASC,8BAA8B,CAACC,IAAI,EAAEL,KAAK,EAAEC,KAAK,CAAC;MAC/E,MAAMK,MAAM,CAACZ,GAAG,CAACa,EAAE,EAAE,OAAO,EAAEJ,cAAc,CAACK,IAAI,CAACC,GAAG,CAAC,EAAE;QACtDP,IAAI,EAAJA,IAAI;QACJF,KAAK,EAALA,KAAK;QACLU,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC,CAAC;MACF,OAAOR,cAAc,CAACK,IAAI;IAC5B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBAbYf,gBAAgBA,CAAAiB,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAlB,IAAA,CAAAmB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAa5B;AAGD,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,cAAc;EACtBC,UAAU,EAAE,kBAAkB;EAC9BC,SAAS,EAAE,iBAAiB;EAC5BC,aAAa,EAAE,qBAAqB;EACpCC,iBAAiB,EAAE,0BAA0B;EAC7CC,KAAK,EAAE;AACT,CAAC;AAED,IAAMC,GAAG,GAAGpC,aAAa,CAAC6B,cAAc,CAAC;AACzC,OAAO,IAAMd,IAAI,GAAGd,OAAO,CAACmC,GAAG,CAAC;AAChC,OAAO,IAAMnB,EAAE,GAAGf,YAAY,CAACkC,GAAG,CAAC;AAEnC,OAAO,IAAMC,UAAU;EAAA,IAAAC,KAAA,GAAA7B,iBAAA,CAAG,aAAY;IACpC,IAAM8B,UAAU,GAAGpC,UAAU,CAACc,EAAE,EAAE,SAAS,CAAC;IAC5C,IAAMuB,QAAQ,SAASlC,OAAO,CAACiC,UAAU,CAAC;IAC1C,OAAOC,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAC,UAAAtC,GAAG;MAAA,OAAAuC,aAAA;QAAOC,EAAE,EAAExC,GAAG,CAACwC;MAAE,GAAKxC,GAAG,CAACyC,IAAI,CAAC,CAAC;IAAA,CAAG,CAAC;EAClE,CAAC;EAAA,gBAJYR,UAAUA,CAAA;IAAA,OAAAC,KAAA,CAAAX,KAAA,OAAAC,SAAA;EAAA;AAAA,GAItB;AAED,OAAO,IAAMkB,eAAe;EAAA,IAAAC,KAAA,GAAAtC,iBAAA,CAAG,WAAOuC,OAAe,EAAK;IACxD,IAAMC,MAAM,GAAG7C,GAAG,CAACa,EAAE,EAAE,SAAS,EAAE+B,OAAO,CAAC;IAC1C,IAAME,OAAO,SAAS7C,MAAM,CAAC4C,MAAM,CAAC;IACpC,IAAIC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;MACpB,OAAAR,aAAA;QAASC,EAAE,EAAEM,OAAO,CAACN;MAAE,GAAKM,OAAO,CAACL,IAAI,CAAC,CAAC;IAC5C;IACA,MAAM,IAAIO,KAAK,CAAC,uBAAuB,CAAC;EAC1C,CAAC;EAAA,gBAPYN,eAAeA,CAAAO,GAAA;IAAA,OAAAN,KAAA,CAAApB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAO3B;AAED,OAAO,IAAM0B,oBAAoB;EAAA,IAAAC,KAAA,GAAA9C,iBAAA,CAAG,aAAY;IAC9C,IAAM+C,WAAW,GAAGrD,UAAU,CAACc,EAAE,EAAE,UAAU,CAAC;IAC9C,IAAMuB,QAAQ,SAASlC,OAAO,CAACkD,WAAW,CAAC;IAC3C,OAAOhB,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAC,UAAAtC,GAAG;MAAA,OAAAuC,aAAA;QAAOC,EAAE,EAAExC,GAAG,CAACwC;MAAE,GAAKxC,GAAG,CAACyC,IAAI,CAAC,CAAC;IAAA,CAAG,CAAC;EAClE,CAAC;EAAA,gBAJYS,oBAAoBA,CAAA;IAAA,OAAAC,KAAA,CAAA5B,KAAA,OAAAC,SAAA;EAAA;AAAA,GAIhC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}